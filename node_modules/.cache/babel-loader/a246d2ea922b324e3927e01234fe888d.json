{"ast":null,"code":"import mainCharacter from \"../data/mainCharacter\";\nimport * as actionTypes from \"./actions\"; //A reducer is a function\n\nconst reducer = (state = mainCharacter, action) => {\n  switch (action.type) {\n    case actionTypes.CHANGE_NAME:\n      return { ...state,\n        name: action.newName\n      };\n\n    case actionTypes.ADD_MINUTES:\n      const newDate = state.date;\n      const currentMinutes = newDate.getMinutes(); //Weird small bug. The minutes you pass get set twice. So Imma just divide by 2. If I remove strict mode, this does not happen\n\n      newDate.setMinutes(currentMinutes + action.minutesToAdd);\n      let newEnergy = parseInt(state.energy.valueOf());\n      console.log(newEnergy - 2);\n      return { ...state,\n        date: newDate,\n        energy: newEnergy\n      };\n\n    case actionTypes.ADD_LUST:\n      return { ...state,\n        lust: state.lust + action.lustToAdd\n      };\n\n    case actionTypes.SET_LUST:\n      if (state.lust > 100) {\n        return { ...state,\n          lust: 100\n        };\n      } else {\n        return { ...state\n        };\n      }\n\n    case actionTypes.ADD_SKILLS:\n      let newSkills = state.skills;\n      newSkills[action.skillToAdd] += action.skillAmmountToAdd;\n      return { ...state,\n        skills: newSkills\n      };\n\n    case actionTypes.PUSH_FLAG:\n      let newFlags = state.flags;\n      newFlags.push(action.flagToAdd);\n      return { ...state,\n        flags: newFlags\n      };\n\n    case actionTypes.CHANGE_RELATIONSHIP:\n      return { ...state,\n        relations: { ...state,\n          [action.relationPerson]: state.relations[action.relationPerson] += action.relationAmmountToAdd\n        }\n      };\n\n    case actionTypes.PUSH_STATUS:\n      let newStatusAdd = state.status;\n      newStatusAdd.push(action.statusToAdd);\n      return { ...state,\n        status: newStatusAdd\n      };\n\n    case actionTypes.SPLICE_STATUS:\n      let newStatusSplice = state.status;\n      newStatusSplice.splice(newStatusSplice.indexOf(action.statusToRemove), 1);\n      return { ...state,\n        status: newStatusSplice\n      };\n\n    case actionTypes.SPLICE_FLAG:\n      let newStateFlagSplice = state.flags;\n      newStateFlagSplice.splice(newStateFlagSplice.indexOf(action.flagToRemove), 1);\n      return { ...state,\n        flags: newStateFlagSplice\n      };\n\n    case actionTypes.ADD_CHEST:\n      return { ...state,\n        chest: state.chest += action.chestToAdd\n      };\n\n    case actionTypes.ADD_HEIGHT:\n      return { ...state,\n        height: state.height += action.heightToAdd\n      };\n\n    case actionTypes.ADD_BELLY:\n      return { ...state,\n        belly: state.belly += action.bellyToAdd\n      };\n\n    case actionTypes.ADD_ITEMS:\n      return { ...state,\n        items: { ...state,\n          [action.itemToAdd]: state.items[action.itemToAdd] += action.itemAmmountToAdd\n        }\n      };\n\n    case actionTypes.SET_HOUR:\n      const newDateHour = state.date;\n      newDateHour.setHours(action.hourToSet);\n      return { ...state,\n        date: newDateHour\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/gvega/Downloads/Opossum/maeville/src/redux/reducer.js"],"names":["mainCharacter","actionTypes","reducer","state","action","type","CHANGE_NAME","name","newName","ADD_MINUTES","newDate","date","currentMinutes","getMinutes","setMinutes","minutesToAdd","newEnergy","parseInt","energy","valueOf","console","log","ADD_LUST","lust","lustToAdd","SET_LUST","ADD_SKILLS","newSkills","skills","skillToAdd","skillAmmountToAdd","PUSH_FLAG","newFlags","flags","push","flagToAdd","CHANGE_RELATIONSHIP","relations","relationPerson","relationAmmountToAdd","PUSH_STATUS","newStatusAdd","status","statusToAdd","SPLICE_STATUS","newStatusSplice","splice","indexOf","statusToRemove","SPLICE_FLAG","newStateFlagSplice","flagToRemove","ADD_CHEST","chest","chestToAdd","ADD_HEIGHT","height","heightToAdd","ADD_BELLY","belly","bellyToAdd","ADD_ITEMS","items","itemToAdd","itemAmmountToAdd","SET_HOUR","newDateHour","setHours","hourToSet"],"mappings":"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","sourcesContent":["import mainCharacter from \"../data/mainCharacter\"\r\nimport * as actionTypes from \"./actions\";\r\n//A reducer is a function\r\nconst reducer = (state = mainCharacter, action) =>{\r\n    switch(action.type){\r\n        case actionTypes.CHANGE_NAME:\r\n            return{\r\n                ...state,\r\n                name : action.newName\r\n            }\r\n        case actionTypes.ADD_MINUTES: \r\n            const newDate = state.date;\r\n            const currentMinutes = newDate.getMinutes();\r\n            //Weird small bug. The minutes you pass get set twice. So Imma just divide by 2. If I remove strict mode, this does not happen\r\n            newDate.setMinutes(currentMinutes + action.minutesToAdd);\r\n            \r\n            let newEnergy = parseInt(state.energy.valueOf());\r\n            console.log(newEnergy - 2);\r\n            return{\r\n                ...state,\r\n                date :  newDate,\r\n                energy: newEnergy\r\n            }\r\n\r\n        case actionTypes.ADD_LUST:\r\n            return{\r\n                ...state,\r\n                lust: state.lust + action.lustToAdd,\r\n            }\r\n        case actionTypes.SET_LUST:\r\n            if(state.lust > 100){\r\n                return{\r\n                    ...state,\r\n                    lust: 100\r\n                }\r\n            } else{\r\n                return{\r\n                    ...state\r\n                }\r\n                \r\n            }\r\n        \r\n        case actionTypes.ADD_SKILLS:\r\n            let newSkills = state.skills;\r\n            newSkills[action.skillToAdd] += action.skillAmmountToAdd;\r\n            return{\r\n               ...state,\r\n               skills : newSkills \r\n            }\r\n        \r\n        case actionTypes.PUSH_FLAG:\r\n            let newFlags = state.flags;\r\n            newFlags.push(action.flagToAdd)\r\n            return{\r\n                ...state,\r\n                flags: newFlags\r\n            }\r\n        \r\n        case actionTypes.CHANGE_RELATIONSHIP:\r\n            return{\r\n                ...state,\r\n                relations:{\r\n                    ...state,\r\n                    [action.relationPerson]: state.relations[action.relationPerson] += action.relationAmmountToAdd\r\n                }\r\n            }\r\n        case actionTypes.PUSH_STATUS:\r\n            let newStatusAdd = state.status;\r\n            newStatusAdd.push(action.statusToAdd)\r\n            return{\r\n                ...state,\r\n                status: newStatusAdd\r\n            }\r\n\r\n        case actionTypes.SPLICE_STATUS:\r\n            let newStatusSplice = state.status;\r\n            newStatusSplice.splice(newStatusSplice.indexOf(action.statusToRemove),1);\r\n            return{\r\n                ...state,\r\n                status : newStatusSplice\r\n            }\r\n        \r\n        \r\n        case actionTypes.SPLICE_FLAG:\r\n            let newStateFlagSplice = state.flags;\r\n            newStateFlagSplice.splice(newStateFlagSplice.indexOf(action.flagToRemove),1);\r\n            return{\r\n                ...state,\r\n                flags: newStateFlagSplice\r\n            }\r\n        \r\n        case actionTypes.ADD_CHEST:\r\n            return{\r\n                ...state,\r\n                chest: state.chest += action.chestToAdd\r\n            }\r\n        \r\n        case actionTypes.ADD_HEIGHT:\r\n            return{\r\n                ...state,\r\n                height: state.height += action.heightToAdd\r\n            }         \r\n        case actionTypes.ADD_BELLY:\r\n            return{\r\n                ...state,\r\n                belly: state.belly += action.bellyToAdd\r\n            }                \r\n                \r\n        case actionTypes.ADD_ITEMS:\r\n            return{\r\n                ...state,\r\n                items:{\r\n                    ...state,\r\n                    [action.itemToAdd]: state.items[action.itemToAdd] += action.itemAmmountToAdd\r\n                }\r\n            }            \r\n\r\n        case actionTypes.SET_HOUR: \r\n            const newDateHour = state.date;\r\n            newDateHour.setHours(action.hourToSet);\r\n            return{\r\n                ...state,\r\n                date :  newDateHour\r\n            }            \r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\nexport default reducer"]},"metadata":{},"sourceType":"module"}