{"ast":null,"code":"import mainCharacter from \"../data/mainCharacter\";\nimport * as actionTypes from \"./actions\"; //A reducer is a function\n\nconst reducer = (state = mainCharacter, action) => {\n  switch (action.type) {\n    case actionTypes.CHANGE_NAME:\n      return { ...state,\n        name: action.newName\n      };\n\n    case actionTypes.ADD_MINUTES:\n      const newDate = state.date;\n      const currentMinutes = newDate.getMinutes(); //Weird small bug. The minutes you pass get set twice. So Imma just divide by 2\n\n      newDate.setMinutes(currentMinutes + action.minutesToAdd / 2);\n      return { ...state,\n        date: newDate\n      };\n\n    case actionTypes.ADD_LUST:\n      return { ...state,\n        lust: state.lust + action.lustToAdd\n      };\n\n    case actionTypes.SET_LUST:\n      if (state.lust > 100) {\n        return { ...state,\n          lust: 100\n        };\n      } else {\n        return { ...state\n        };\n      }\n\n    case actionTypes.ADD_SKILLS:\n      let newSkills = status.skills;\n      newSkills[action.skillToAdd] += action.skillAmmountToAdd;\n      return { ...state,\n        skills: newSkills\n      };\n\n    case actionTypes.PUSH_FLAG:\n      let newFlags = state.flags;\n      newFlags.push(action.flagToAdd);\n      return { ...state,\n        flags: newFlags\n      };\n\n    case actionTypes.CHANGE_RELATIONSHIP:\n      return { ...state,\n        relations: { ...state,\n          [action.relationPerson]: state.relations[action.relationPerson] += action.relationAmmountToAdd\n        }\n      };\n\n    case actionTypes.PUSH_STATUS:\n      let newStatusAdd = state.status;\n      newStatusAdd.push(action.statusToAdd);\n      return { ...state,\n        status: newStatusAdd\n      };\n\n    case actionTypes.SPLICE_STATUS:\n      let newStatusSplice = state.status;\n      newStatusSplice.splice(newStatusSplice.indexOf(action.statusToRemove), 1);\n      return { ...state,\n        status: newStatusSplice\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/gvega/Downloads/Opossum/maeville/src/redux/reducer.js"],"names":["mainCharacter","actionTypes","reducer","state","action","type","CHANGE_NAME","name","newName","ADD_MINUTES","newDate","date","currentMinutes","getMinutes","setMinutes","minutesToAdd","ADD_LUST","lust","lustToAdd","SET_LUST","ADD_SKILLS","newSkills","status","skills","skillToAdd","skillAmmountToAdd","PUSH_FLAG","newFlags","flags","push","flagToAdd","CHANGE_RELATIONSHIP","relations","relationPerson","relationAmmountToAdd","PUSH_STATUS","newStatusAdd","statusToAdd","SPLICE_STATUS","newStatusSplice","splice","indexOf","statusToRemove"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,uBAA1B;AACA,OAAO,KAAKC,WAAZ,MAA6B,WAA7B,C,CACA;;AACA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGH,aAAT,EAAwBI,MAAxB,KAAkC;AAI9C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKJ,WAAW,CAACK,WAAjB;AACI,aAAM,EACF,GAAGH,KADD;AAEFI,QAAAA,IAAI,EAAGH,MAAM,CAACI;AAFZ,OAAN;;AAIJ,SAAKP,WAAW,CAACQ,WAAjB;AACI,YAAMC,OAAO,GAAGP,KAAK,CAACQ,IAAtB;AACA,YAAMC,cAAc,GAAGF,OAAO,CAACG,UAAR,EAAvB,CAFJ,CAGI;;AACAH,MAAAA,OAAO,CAACI,UAAR,CAAmBF,cAAc,GAAGR,MAAM,CAACW,YAAP,GAAoB,CAAxD;AACA,aAAM,EACF,GAAGZ,KADD;AAEFQ,QAAAA,IAAI,EAAID;AAFN,OAAN;;AAKJ,SAAKT,WAAW,CAACe,QAAjB;AACI,aAAM,EACF,GAAGb,KADD;AAEFc,QAAAA,IAAI,EAAEd,KAAK,CAACc,IAAN,GAAab,MAAM,CAACc;AAFxB,OAAN;;AAIJ,SAAKjB,WAAW,CAACkB,QAAjB;AACI,UAAGhB,KAAK,CAACc,IAAN,GAAa,GAAhB,EAAoB;AAChB,eAAM,EACF,GAAGd,KADD;AAEFc,UAAAA,IAAI,EAAE;AAFJ,SAAN;AAIH,OALD,MAKM;AACF,eAAM,EACF,GAAGd;AADD,SAAN;AAIH;;AAEL,SAAKF,WAAW,CAACmB,UAAjB;AACI,UAAIC,SAAS,GAAGC,MAAM,CAACC,MAAvB;AACAF,MAAAA,SAAS,CAACjB,MAAM,CAACoB,UAAR,CAAT,IAAgCpB,MAAM,CAACqB,iBAAvC;AACA,aAAM,EACH,GAAGtB,KADA;AAEHoB,QAAAA,MAAM,EAAGF;AAFN,OAAN;;AAKJ,SAAKpB,WAAW,CAACyB,SAAjB;AACI,UAAIC,QAAQ,GAAGxB,KAAK,CAACyB,KAArB;AACAD,MAAAA,QAAQ,CAACE,IAAT,CAAczB,MAAM,CAAC0B,SAArB;AACA,aAAM,EACF,GAAG3B,KADD;AAEFyB,QAAAA,KAAK,EAAED;AAFL,OAAN;;AAKJ,SAAK1B,WAAW,CAAC8B,mBAAjB;AACI,aAAM,EACF,GAAG5B,KADD;AAEF6B,QAAAA,SAAS,EAAC,EACN,GAAG7B,KADG;AAEN,WAACC,MAAM,CAAC6B,cAAR,GAAyB9B,KAAK,CAAC6B,SAAN,CAAgB5B,MAAM,CAAC6B,cAAvB,KAA0C7B,MAAM,CAAC8B;AAFpE;AAFR,OAAN;;AAOJ,SAAKjC,WAAW,CAACkC,WAAjB;AACI,UAAIC,YAAY,GAAGjC,KAAK,CAACmB,MAAzB;AACAc,MAAAA,YAAY,CAACP,IAAb,CAAkBzB,MAAM,CAACiC,WAAzB;AACA,aAAM,EACF,GAAGlC,KADD;AAEFmB,QAAAA,MAAM,EAAEc;AAFN,OAAN;;AAKJ,SAAKnC,WAAW,CAACqC,aAAjB;AACI,UAAIC,eAAe,GAAGpC,KAAK,CAACmB,MAA5B;AACAiB,MAAAA,eAAe,CAACC,MAAhB,CAAuBD,eAAe,CAACE,OAAhB,CAAwBrC,MAAM,CAACsC,cAA/B,CAAvB,EAAsE,CAAtE;AACA,aAAM,EACF,GAAGvC,KADD;AAEFmB,QAAAA,MAAM,EAAGiB;AAFP,OAAN;;AAIJ;AACI,aAAOpC,KAAP;AA1ER;AA6EH,CAjFD;;AAmFA,eAAeD,OAAf","sourcesContent":["import mainCharacter from \"../data/mainCharacter\"\r\nimport * as actionTypes from \"./actions\";\r\n//A reducer is a function\r\nconst reducer = (state = mainCharacter, action) =>{\r\n\r\n    \r\n\r\n    switch(action.type){\r\n        case actionTypes.CHANGE_NAME:\r\n            return{\r\n                ...state,\r\n                name : action.newName\r\n            }\r\n        case actionTypes.ADD_MINUTES: \r\n            const newDate = state.date;\r\n            const currentMinutes = newDate.getMinutes();\r\n            //Weird small bug. The minutes you pass get set twice. So Imma just divide by 2\r\n            newDate.setMinutes(currentMinutes + action.minutesToAdd/2);\r\n            return{\r\n                ...state,\r\n                date :  newDate\r\n            }\r\n\r\n        case actionTypes.ADD_LUST:\r\n            return{\r\n                ...state,\r\n                lust: state.lust + action.lustToAdd,\r\n            }\r\n        case actionTypes.SET_LUST:\r\n            if(state.lust > 100){\r\n                return{\r\n                    ...state,\r\n                    lust: 100\r\n                }\r\n            } else{\r\n                return{\r\n                    ...state\r\n                }\r\n                \r\n            }\r\n        \r\n        case actionTypes.ADD_SKILLS:\r\n            let newSkills = status.skills;\r\n            newSkills[action.skillToAdd] += action.skillAmmountToAdd;\r\n            return{\r\n               ...state,\r\n               skills : newSkills \r\n            }\r\n        \r\n        case actionTypes.PUSH_FLAG:\r\n            let newFlags = state.flags;\r\n            newFlags.push(action.flagToAdd)\r\n            return{\r\n                ...state,\r\n                flags: newFlags\r\n            }\r\n        \r\n        case actionTypes.CHANGE_RELATIONSHIP:\r\n            return{\r\n                ...state,\r\n                relations:{\r\n                    ...state,\r\n                    [action.relationPerson]: state.relations[action.relationPerson] += action.relationAmmountToAdd\r\n                }\r\n            }\r\n        case actionTypes.PUSH_STATUS:\r\n            let newStatusAdd = state.status;\r\n            newStatusAdd.push(action.statusToAdd)\r\n            return{\r\n                ...state,\r\n                status: newStatusAdd\r\n            }\r\n\r\n        case actionTypes.SPLICE_STATUS:\r\n            let newStatusSplice = state.status;\r\n            newStatusSplice.splice(newStatusSplice.indexOf(action.statusToRemove),1);\r\n            return{\r\n                ...state,\r\n                status : newStatusSplice\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\nexport default reducer\r\n"]},"metadata":{},"sourceType":"module"}