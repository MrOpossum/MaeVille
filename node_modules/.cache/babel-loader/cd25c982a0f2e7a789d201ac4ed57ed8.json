{"ast":null,"code":"import mainCharacter from \"../data/mainCharacter\";\nimport * as actionTypes from \"./actions\"; //A reducer is a function\n\nconst reducer = (state = mainCharacter, action) => {\n  switch (action.type) {\n    case actionTypes.CHANGE_NAME:\n      return { ...state,\n        name: action.newName\n      };\n\n    case actionTypes.ADD_MINUTES:\n      const newDate = state.date;\n      const currentMinutes = newDate.getMinutes(); //Weird small bug. The minutes you pass get set twice. So Imma just divide by 2. If I remove strict mode, this does not happen\n\n      newDate.setMinutes(currentMinutes + action.minutesToAdd);\n      let newEnergy = state.energy.valueOf();\n      console.log(newEnergy);\n      return { ...state,\n        date: newDate,\n        energy: newEnergy\n      };\n\n    case actionTypes.ADD_LUST:\n      return { ...state,\n        lust: state.lust + action.lustToAdd\n      };\n\n    case actionTypes.SET_LUST:\n      if (state.lust > 100) {\n        return { ...state,\n          lust: 100\n        };\n      } else {\n        return { ...state\n        };\n      }\n\n    case actionTypes.ADD_SKILLS:\n      let newSkills = state.skills;\n      newSkills[action.skillToAdd] += action.skillAmmountToAdd;\n      return { ...state,\n        skills: newSkills\n      };\n\n    case actionTypes.PUSH_FLAG:\n      let newFlags = state.flags;\n      newFlags.push(action.flagToAdd);\n      return { ...state,\n        flags: newFlags\n      };\n\n    case actionTypes.CHANGE_RELATIONSHIP:\n      return { ...state,\n        relations: { ...state,\n          [action.relationPerson]: state.relations[action.relationPerson] += action.relationAmmountToAdd\n        }\n      };\n\n    case actionTypes.PUSH_STATUS:\n      let newStatusAdd = state.status;\n      newStatusAdd.push(action.statusToAdd);\n      return { ...state,\n        status: newStatusAdd\n      };\n\n    case actionTypes.SPLICE_STATUS:\n      let newStatusSplice = state.status;\n      newStatusSplice.splice(newStatusSplice.indexOf(action.statusToRemove), 1);\n      return { ...state,\n        status: newStatusSplice\n      };\n\n    case actionTypes.SPLICE_FLAG:\n      let newStateFlagSplice = state.flags;\n      newStateFlagSplice.splice(newStateFlagSplice.indexOf(action.flagToRemove), 1);\n      return { ...state,\n        flags: newStateFlagSplice\n      };\n\n    case actionTypes.ADD_CHEST:\n      return { ...state,\n        chest: state.chest += action.chestToAdd\n      };\n\n    case actionTypes.ADD_HEIGHT:\n      return { ...state,\n        height: state.height += action.heightToAdd\n      };\n\n    case actionTypes.ADD_BELLY:\n      return { ...state,\n        belly: state.belly += action.bellyToAdd\n      };\n\n    case actionTypes.ADD_ITEMS:\n      return { ...state,\n        items: { ...state,\n          [action.itemToAdd]: state.items[action.itemToAdd] += action.itemAmmountToAdd\n        }\n      };\n\n    case actionTypes.SET_HOUR:\n      const newDateHour = state.date;\n      newDateHour.setHours(action.hourToSet);\n      return { ...state,\n        date: newDateHour\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/gvega/Downloads/Opossum/maeville/src/redux/reducer.js"],"names":["mainCharacter","actionTypes","reducer","state","action","type","CHANGE_NAME","name","newName","ADD_MINUTES","newDate","date","currentMinutes","getMinutes","setMinutes","minutesToAdd","newEnergy","energy","valueOf","console","log","ADD_LUST","lust","lustToAdd","SET_LUST","ADD_SKILLS","newSkills","skills","skillToAdd","skillAmmountToAdd","PUSH_FLAG","newFlags","flags","push","flagToAdd","CHANGE_RELATIONSHIP","relations","relationPerson","relationAmmountToAdd","PUSH_STATUS","newStatusAdd","status","statusToAdd","SPLICE_STATUS","newStatusSplice","splice","indexOf","statusToRemove","SPLICE_FLAG","newStateFlagSplice","flagToRemove","ADD_CHEST","chest","chestToAdd","ADD_HEIGHT","height","heightToAdd","ADD_BELLY","belly","bellyToAdd","ADD_ITEMS","items","itemToAdd","itemAmmountToAdd","SET_HOUR","newDateHour","setHours","hourToSet"],"mappings":"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","sourcesContent":["import mainCharacter from \"../data/mainCharacter\"\r\nimport * as actionTypes from \"./actions\";\r\n//A reducer is a function\r\nconst reducer = (state = mainCharacter, action) =>{\r\n    switch(action.type){\r\n        case actionTypes.CHANGE_NAME:\r\n            return{\r\n                ...state,\r\n                name : action.newName\r\n            }\r\n        case actionTypes.ADD_MINUTES: \r\n            const newDate = state.date;\r\n            const currentMinutes = newDate.getMinutes();\r\n            //Weird small bug. The minutes you pass get set twice. So Imma just divide by 2. If I remove strict mode, this does not happen\r\n            newDate.setMinutes(currentMinutes + action.minutesToAdd);\r\n            \r\n            let newEnergy = state.energy.valueOf();\r\n            console.log(newEnergy);\r\n            return{\r\n                ...state,\r\n                date :  newDate,\r\n                energy: newEnergy\r\n            }\r\n\r\n        case actionTypes.ADD_LUST:\r\n            return{\r\n                ...state,\r\n                lust: state.lust + action.lustToAdd,\r\n            }\r\n        case actionTypes.SET_LUST:\r\n            if(state.lust > 100){\r\n                return{\r\n                    ...state,\r\n                    lust: 100\r\n                }\r\n            } else{\r\n                return{\r\n                    ...state\r\n                }\r\n                \r\n            }\r\n        \r\n        case actionTypes.ADD_SKILLS:\r\n            let newSkills = state.skills;\r\n            newSkills[action.skillToAdd] += action.skillAmmountToAdd;\r\n            return{\r\n               ...state,\r\n               skills : newSkills \r\n            }\r\n        \r\n        case actionTypes.PUSH_FLAG:\r\n            let newFlags = state.flags;\r\n            newFlags.push(action.flagToAdd)\r\n            return{\r\n                ...state,\r\n                flags: newFlags\r\n            }\r\n        \r\n        case actionTypes.CHANGE_RELATIONSHIP:\r\n            return{\r\n                ...state,\r\n                relations:{\r\n                    ...state,\r\n                    [action.relationPerson]: state.relations[action.relationPerson] += action.relationAmmountToAdd\r\n                }\r\n            }\r\n        case actionTypes.PUSH_STATUS:\r\n            let newStatusAdd = state.status;\r\n            newStatusAdd.push(action.statusToAdd)\r\n            return{\r\n                ...state,\r\n                status: newStatusAdd\r\n            }\r\n\r\n        case actionTypes.SPLICE_STATUS:\r\n            let newStatusSplice = state.status;\r\n            newStatusSplice.splice(newStatusSplice.indexOf(action.statusToRemove),1);\r\n            return{\r\n                ...state,\r\n                status : newStatusSplice\r\n            }\r\n        \r\n        \r\n        case actionTypes.SPLICE_FLAG:\r\n            let newStateFlagSplice = state.flags;\r\n            newStateFlagSplice.splice(newStateFlagSplice.indexOf(action.flagToRemove),1);\r\n            return{\r\n                ...state,\r\n                flags: newStateFlagSplice\r\n            }\r\n        \r\n        case actionTypes.ADD_CHEST:\r\n            return{\r\n                ...state,\r\n                chest: state.chest += action.chestToAdd\r\n            }\r\n        \r\n        case actionTypes.ADD_HEIGHT:\r\n            return{\r\n                ...state,\r\n                height: state.height += action.heightToAdd\r\n            }         \r\n        case actionTypes.ADD_BELLY:\r\n            return{\r\n                ...state,\r\n                belly: state.belly += action.bellyToAdd\r\n            }                \r\n                \r\n        case actionTypes.ADD_ITEMS:\r\n            return{\r\n                ...state,\r\n                items:{\r\n                    ...state,\r\n                    [action.itemToAdd]: state.items[action.itemToAdd] += action.itemAmmountToAdd\r\n                }\r\n            }            \r\n\r\n        case actionTypes.SET_HOUR: \r\n            const newDateHour = state.date;\r\n            newDateHour.setHours(action.hourToSet);\r\n            return{\r\n                ...state,\r\n                date :  newDateHour\r\n            }            \r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\nexport default reducer"]},"metadata":{},"sourceType":"module"}