{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\gvega\\\\Downloads\\\\Opossum\\\\maeville\\\\src\\\\components\\\\Upload.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport * as actionTypes from \"../redux/actions\";\nimport { connect } from \"react-redux\";\n\nfunction Upload() {\n  _s();\n\n  const [files, setFiles] = useState(\"\");\n\n  const handleChange = e => {\n    const fileReader = new FileReader();\n    fileReader.readAsText(e.target.files[0], \"UTF-8\");\n\n    fileReader.onload = e => {\n      console.log(e.target.result);\n      setFiles(e.target.result);\n      console.log(\"-----\");\n      var myCharacterFromJSON = JSON.parse(e.target.result);\n      console.log(myCharacterFromJSON);\n      console.log(new Date(myCharacterFromJSON[\"date\"]));\n      props.onNameChange(myCharacterFromJSON[\"\"]);\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Upload, \"o24vquJs73y9PqOcSl0QKqg99pQ=\");\n\n_c = Upload;\n\nconst mapStateToProps = state => {\n  return {\n    myName: state.name,\n    date: state.date,\n    lust: state.lust,\n    skills: state.skills,\n    physical: state.physical,\n    mind: state.mind,\n    attractiveness: state.attractiveness,\n    pronoun: state.pronoun,\n    energy: state.energy,\n    chest: state.chest,\n    belly: state.belly,\n    height: state.height,\n    status: state.status,\n    environmentStatus: state.environmentStatus,\n    items: state.items,\n    money: state.money,\n    flags: state.flags,\n    relations: state.relations\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onNameChange: nameChange => dispatch({\n      type: actionTypes.CHANGE_NAME,\n      newName: nameChange\n    }),\n    onAddMinutes: minutes => dispatch({\n      type: actionTypes.ADD_MINUTES,\n      minutesToAdd: minutes\n    }),\n    onAddLust: lust => dispatch({\n      type: actionTypes.ADD_LUST,\n      lustToAdd: lust\n    }),\n    onSetLust: () => dispatch({\n      type: actionTypes.SET_LUST\n    }),\n    onAddSkills: (_skillToAdd, _skillAmmountToAdd) => dispatch({\n      type: actionTypes.ADD_SKILLS,\n      skillToAdd: _skillToAdd,\n      skillAmmountToAdd: _skillAmmountToAdd\n    }),\n    onPushFlag: _flagToPush => dispatch({\n      type: actionTypes.PUSH_FLAG,\n      flagToAdd: _flagToPush\n    }),\n    onChangeRelationship: (_relationPerson, _relationAmmountToAdd) => dispatch({\n      type: actionTypes.CHANGE_RELATIONSHIP,\n      relationPerson: _relationPerson,\n      relationAmmountToAdd: _relationAmmountToAdd\n    }),\n    onPushStatus: _statusToPush => dispatch({\n      type: actionTypes.PUSH_STATUS,\n      statusToAdd: _statusToPush\n    }),\n    onSpliceStatus: _statusToSplice => dispatch({\n      type: actionTypes.SPLICE_STATUS,\n      statusToRemove: _statusToSplice\n    }),\n    onSpliceFlag: _flagToRemove => dispatch({\n      type: actionTypes.SPLICE_FLAG,\n      flagToRemove: _flagToRemove\n    }),\n    onAddChest: _chestToAdd => dispatch({\n      type: actionTypes.ADD_CHEST,\n      chestToAdd: _chestToAdd\n    }),\n    onAddHeight: _heightToAdd => dispatch({\n      type: actionTypes.ADD_HEIGHT,\n      heightToAdd: _heightToAdd\n    }),\n    onAddBelly: _bellyToAdd => dispatch({\n      type: actionTypes.ADD_BELLY,\n      bellyToAdd: _bellyToAdd\n    }),\n    onAddItem: (_itemToAdd, _itemAmmountToAdd) => dispatch({\n      type: actionTypes.ADD_ITEMS,\n      itemToAdd: _itemToAdd,\n      itemAmmountToAdd: _itemAmmountToAdd\n    }),\n    onSetHour: _hourToSet => dispatch({\n      type: actionTypes.SET_HOUR,\n      hourToSet: _hourToSet\n    }),\n    onAddEnergy: _EnergyToAdd => dispatch({\n      type: actionTypes.ADD_ENERGY,\n      energyToAdd: _EnergyToAdd\n    }),\n    onSetEnergy: _EnergyToSet => dispatch({\n      type: actionTypes.SET_ENERGY,\n      energyToSet: _EnergyToSet\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Upload);\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["C:/Users/gvega/Downloads/Opossum/maeville/src/components/Upload.jsx"],"names":["React","useState","actionTypes","connect","Upload","files","setFiles","handleChange","e","fileReader","FileReader","readAsText","target","onload","console","log","result","myCharacterFromJSON","JSON","parse","Date","props","onNameChange","mapStateToProps","state","myName","name","date","lust","skills","physical","mind","attractiveness","pronoun","energy","chest","belly","height","status","environmentStatus","items","money","flags","relations","mapDispatchToProps","dispatch","nameChange","type","CHANGE_NAME","newName","onAddMinutes","minutes","ADD_MINUTES","minutesToAdd","onAddLust","ADD_LUST","lustToAdd","onSetLust","SET_LUST","onAddSkills","_skillToAdd","_skillAmmountToAdd","ADD_SKILLS","skillToAdd","skillAmmountToAdd","onPushFlag","_flagToPush","PUSH_FLAG","flagToAdd","onChangeRelationship","_relationPerson","_relationAmmountToAdd","CHANGE_RELATIONSHIP","relationPerson","relationAmmountToAdd","onPushStatus","_statusToPush","PUSH_STATUS","statusToAdd","onSpliceStatus","_statusToSplice","SPLICE_STATUS","statusToRemove","onSpliceFlag","_flagToRemove","SPLICE_FLAG","flagToRemove","onAddChest","_chestToAdd","ADD_CHEST","chestToAdd","onAddHeight","_heightToAdd","ADD_HEIGHT","heightToAdd","onAddBelly","_bellyToAdd","ADD_BELLY","bellyToAdd","onAddItem","_itemToAdd","_itemAmmountToAdd","ADD_ITEMS","itemToAdd","itemAmmountToAdd","onSetHour","_hourToSet","SET_HOUR","hourToSet","onAddEnergy","_EnergyToAdd","ADD_ENERGY","energyToAdd","onSetEnergy","_EnergyToSet","SET_ENERGY","energyToSet"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport * as actionTypes from \"../redux/actions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nfunction Upload() {\r\n  const [files, setFiles] = useState(\"\");\r\n\r\n  const handleChange = e => {\r\n    const fileReader = new FileReader();\r\n    fileReader.readAsText(e.target.files[0], \"UTF-8\");\r\n    fileReader.onload = e => {\r\n        console.log(e.target.result);\r\n        setFiles(e.target.result);\r\n        console.log(\"-----\");\r\n        var myCharacterFromJSON = JSON.parse(e.target.result);\r\n        console.log(myCharacterFromJSON);\r\n        console.log(new Date(myCharacterFromJSON[\"date\"]));\r\n        props.onNameChange(myCharacterFromJSON[\"\"])\r\n    };\r\n  };\r\n  return (\r\n    <>\r\n      <input type=\"file\" onChange={handleChange} />\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>{\r\n    return{\r\n      myName: state.name,\r\n      date: state.date,\r\n      lust: state.lust,\r\n      skills: state.skills,\r\n      physical: state.physical,\r\n      mind: state.mind,\r\n      attractiveness: state.attractiveness,\r\n      pronoun : state.pronoun,\r\n      energy: state.energy,\r\n      chest: state.chest,\r\n      belly: state.belly,\r\n      height: state.height,\r\n      status: state.status,\r\n      environmentStatus: state.environmentStatus,\r\n      items: state.items,\r\n      money: state.money,\r\n      flags: state.flags,\r\n      relations: state.relations\r\n    };\r\n  }\r\n  \r\n  const mapDispatchToProps = dispatch =>{\r\n    return{\r\n      onNameChange: (nameChange) => dispatch({type: actionTypes.CHANGE_NAME, newName:nameChange}),\r\n      onAddMinutes: (minutes) => dispatch({type: actionTypes.ADD_MINUTES, minutesToAdd:minutes}),\r\n      onAddLust: (lust) => dispatch({type: actionTypes.ADD_LUST, lustToAdd:lust}),\r\n      onSetLust: () => dispatch({type: actionTypes.SET_LUST}),\r\n      onAddSkills: (_skillToAdd, _skillAmmountToAdd) => dispatch({type: actionTypes.ADD_SKILLS, skillToAdd: _skillToAdd, skillAmmountToAdd: _skillAmmountToAdd}),\r\n      onPushFlag: (_flagToPush) => dispatch({type: actionTypes.PUSH_FLAG,flagToAdd: _flagToPush }),\r\n      onChangeRelationship: (_relationPerson, _relationAmmountToAdd) => dispatch ({type: actionTypes.CHANGE_RELATIONSHIP, relationPerson: _relationPerson, relationAmmountToAdd: _relationAmmountToAdd}),\r\n      onPushStatus : (_statusToPush) => dispatch({type: actionTypes.PUSH_STATUS, statusToAdd: _statusToPush}),\r\n      onSpliceStatus : (_statusToSplice) => dispatch({type: actionTypes.SPLICE_STATUS, statusToRemove: _statusToSplice}),\r\n      onSpliceFlag: (_flagToRemove) => dispatch({type: actionTypes.SPLICE_FLAG, flagToRemove: _flagToRemove}),\r\n      onAddChest: (_chestToAdd) => dispatch({type: actionTypes.ADD_CHEST,\r\n      chestToAdd: _chestToAdd}),\r\n      onAddHeight: (_heightToAdd) => dispatch({type: actionTypes.ADD_HEIGHT, heightToAdd:_heightToAdd}),\r\n      onAddBelly: (_bellyToAdd) => dispatch({type: actionTypes.ADD_BELLY, bellyToAdd:_bellyToAdd}),\r\n      onAddItem: (_itemToAdd, _itemAmmountToAdd) => dispatch({type: actionTypes.ADD_ITEMS, itemToAdd: _itemToAdd, itemAmmountToAdd: _itemAmmountToAdd}),\r\n      onSetHour: (_hourToSet) => dispatch({type:actionTypes.SET_HOUR,hourToSet: _hourToSet}),\r\n      onAddEnergy: (_EnergyToAdd) => dispatch({type:actionTypes.ADD_ENERGY, energyToAdd: _EnergyToAdd}),\r\n      onSetEnergy: (_EnergyToSet) => dispatch({type:actionTypes.SET_ENERGY, energyToSet: _EnergyToSet}),\r\n  \r\n  \r\n      \r\n    }\r\n  }\r\n  \r\n  export default connect(mapStateToProps,mapDispatchToProps)(Upload);\r\n  \r\n  "]},"metadata":{},"sourceType":"module"}