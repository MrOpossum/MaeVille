{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\gvega\\\\Downloads\\\\Opossum\\\\maeville\\\\src\\\\App.js\";\nimport './App.css';\nimport { connect } from \"react-redux\";\nimport * as actionTypes from \"./redux/actions\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\"; //Events\n\nimport Beginning from \"./events/Beginning\";\nimport _0_Start from \"./events/_0_Start\";\nimport _1_Ignore from \"./events/_1_Ignore\";\nimport _1_Inspect from \"./events/_1_Inspect\";\nimport Apartment from \"./Places/Apartment\";\nimport Farm from \"./Places/Farm\";\n\nconst App = props => {\n  let BeginningSwitch = () => {\n    return /*#__PURE__*/_jsxDEV(Beginning, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  };\n\n  let _0_StartSwitch = () => {\n    return /*#__PURE__*/_jsxDEV(_0_Start, {\n      changeName: props.onNameChange,\n      name: props.myName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  };\n\n  let _1_InspectSwitch = () => {\n    return /*#__PURE__*/_jsxDEV(_1_Inspect, {\n      onSetHour: props.onSetHour,\n      onPushFlag: props.onPushFlag\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  };\n\n  let _1_IgnoreSwitch = () => {\n    return /*#__PURE__*/_jsxDEV(_1_Ignore, {\n      onSetHour: props.onSetHour,\n      onPushFlag: props.onPushFlag\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  };\n\n  let ApartmentSwitch = () => {\n    return /*#__PURE__*/_jsxDEV(Apartment, {\n      money: props.money,\n      energy: props.energy,\n      date: props.date,\n      onAddMinutes: props.onAddMinutes,\n      onSpliceFlag: props.onSpliceFlag,\n      onPushFlag: props.onPushFlag,\n      onSetHour: props.onSetHour,\n      flags: props.flags,\n      onChangeRelationship: props.onChangeRelationship\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  };\n\n  let FarmSwitch = () => {\n    console.log(\"FARM\");\n    return /*#__PURE__*/_jsxDEV(Farm, {\n      money: props.money,\n      energy: props.energy,\n      date: props.date,\n      onAddMinutes: props.onAddMinutes,\n      onSpliceFlag: props.onSpliceFlag,\n      onPushFlag: props.onPushFlag,\n      onSetHour: props.onSetHour,\n      flags: props.flags,\n      onChangeRelationship: props.onChangeRelationship\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/Beginning\",\n          component: BeginningSwitch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/_0_Start\",\n          component: _0_StartSwitch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/_1_Inspect\",\n          component: _1_InspectSwitch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/_1_Ignore\",\n          component: _1_IgnoreSwitch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/Apartment\",\n          component: ApartmentSwitch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/Farm\",\n          component: FarmSwitch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/GameMap\",\n          component: GameMapSwitch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/Beginning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}; //End of App.\n\n\n_c = App;\n\nconst mapStateToProps = state => {\n  return {\n    myName: state.name,\n    date: state.date,\n    lust: state.lust,\n    skills: state.skills,\n    physical: state.physical,\n    mind: state.mind,\n    attractiveness: state.attractiveness,\n    pronoun: state.pronoun,\n    energy: state.energy,\n    chest: state.chest,\n    belly: state.belly,\n    height: state.height,\n    status: state.status,\n    environmentStatus: state.environmentStatus,\n    items: state.items,\n    money: state.money,\n    flags: state.flags,\n    relations: state.relations\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onNameChange: nameChange => dispatch({\n      type: actionTypes.CHANGE_NAME,\n      newName: nameChange\n    }),\n    onAddMinutes: minutes => dispatch({\n      type: actionTypes.ADD_MINUTES,\n      minutesToAdd: minutes\n    }),\n    onAddLust: lust => dispatch({\n      type: actionTypes.ADD_LUST,\n      lustToAdd: lust\n    }),\n    onSetLust: () => dispatch({\n      type: actionTypes.SET_LUST\n    }),\n    onAddSkills: (_skillToAdd, _skillAmmountToAdd) => dispatch({\n      type: actionTypes.ADD_SKILLS,\n      skillToAdd: _skillToAdd,\n      skillAmmountToAdd: _skillAmmountToAdd\n    }),\n    onPushFlag: _flagToPush => dispatch({\n      type: actionTypes.PUSH_FLAG,\n      flagToAdd: _flagToPush\n    }),\n    onChangeRelationship: (_relationPerson, _relationAmmountToAdd) => dispatch({\n      type: actionTypes.CHANGE_RELATIONSHIP,\n      relationPerson: _relationPerson,\n      relationAmmountToAdd: _relationAmmountToAdd\n    }),\n    onPushStatus: _statusToPush => dispatch({\n      type: actionTypes.PUSH_STATUS,\n      statusToAdd: _statusToPush\n    }),\n    onSpliceStatus: _statusToSplice => dispatch({\n      type: actionTypes.SPLICE_STATUS,\n      statusToRemove: _statusToSplice\n    }),\n    onSpliceFlag: _flagToRemove => dispatch({\n      type: actionTypes.SPLICE_FLAG,\n      flagToRemove: _flagToRemove\n    }),\n    onAddChest: _chestToAdd => dispatch({\n      type: actionTypes.ADD_CHEST,\n      chestToAdd: _chestToAdd\n    }),\n    onAddHeight: _heightToAdd => dispatch({\n      type: actionTypes.ADD_HEIGHT,\n      heightToAdd: _heightToAdd\n    }),\n    onAddBelly: _bellyToAdd => dispatch({\n      type: actionTypes.ADD_BELLY,\n      bellyToAdd: _bellyToAdd\n    }),\n    onAddItem: (_itemToAdd, _itemAmmountToAdd) => dispatch({\n      type: actionTypes.ADD_ITEMS,\n      itemToAdd: _itemToAdd,\n      itemAmmountToAdd: _itemAmmountToAdd\n    }),\n    onSetHour: _hourToSet => dispatch({\n      type: actionTypes.SET_HOUR,\n      hourToSet: _hourToSet\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/gvega/Downloads/Opossum/maeville/src/App.js"],"names":["connect","actionTypes","BrowserRouter","Router","Switch","Route","Redirect","Beginning","_0_Start","_1_Ignore","_1_Inspect","Apartment","Farm","App","props","BeginningSwitch","_0_StartSwitch","onNameChange","myName","_1_InspectSwitch","onSetHour","onPushFlag","_1_IgnoreSwitch","ApartmentSwitch","money","energy","date","onAddMinutes","onSpliceFlag","flags","onChangeRelationship","FarmSwitch","console","log","GameMapSwitch","mapStateToProps","state","name","lust","skills","physical","mind","attractiveness","pronoun","chest","belly","height","status","environmentStatus","items","relations","mapDispatchToProps","dispatch","nameChange","type","CHANGE_NAME","newName","minutes","ADD_MINUTES","minutesToAdd","onAddLust","ADD_LUST","lustToAdd","onSetLust","SET_LUST","onAddSkills","_skillToAdd","_skillAmmountToAdd","ADD_SKILLS","skillToAdd","skillAmmountToAdd","_flagToPush","PUSH_FLAG","flagToAdd","_relationPerson","_relationAmmountToAdd","CHANGE_RELATIONSHIP","relationPerson","relationAmmountToAdd","onPushStatus","_statusToPush","PUSH_STATUS","statusToAdd","onSpliceStatus","_statusToSplice","SPLICE_STATUS","statusToRemove","_flagToRemove","SPLICE_FLAG","flagToRemove","onAddChest","_chestToAdd","ADD_CHEST","chestToAdd","onAddHeight","_heightToAdd","ADD_HEIGHT","heightToAdd","onAddBelly","_bellyToAdd","ADD_BELLY","bellyToAdd","onAddItem","_itemToAdd","_itemAmmountToAdd","ADD_ITEMS","itemToAdd","itemAmmountToAdd","_hourToSet","SET_HOUR","hourToSet"],"mappings":"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","sourcesContent":["import './App.css';\nimport {connect} from \"react-redux\";\nimport * as actionTypes from \"./redux/actions\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\n//Events\nimport Beginning from \"./events/Beginning\";\nimport _0_Start from \"./events/_0_Start\";\nimport _1_Ignore from \"./events/_1_Ignore\";\nimport _1_Inspect from \"./events/_1_Inspect\";\nimport Apartment from \"./Places/Apartment\";\nimport Farm from \"./Places/Farm\";\n\nconst App = ( props ) => {\n\n  \n  let BeginningSwitch = () => {\n    return (\n      <Beginning></Beginning>\n    );\n  };\n\n  let _0_StartSwitch= () => {\n    return(\n      <_0_Start\n            changeName = {props.onNameChange}\n            name = {props.myName}\n      ></_0_Start>\n    )\n  }\n\n\n  let _1_InspectSwitch= () => {\n    return(\n      <_1_Inspect\n            onSetHour = {props.onSetHour}\n            onPushFlag = {props.onPushFlag}\n      ></_1_Inspect>\n    )\n  }\n\n  let _1_IgnoreSwitch= () => {\n    return(\n      <_1_Ignore\n      onSetHour = {props.onSetHour}\n      onPushFlag = {props.onPushFlag}\n      ></_1_Ignore>\n    )\n  }\n\n  let ApartmentSwitch = () => {\n    return(\n      <Apartment\n      money = {props.money}\n      energy = {props.energy}\n      date = {props.date}\n      onAddMinutes = {props.onAddMinutes}\n      onSpliceFlag = {props.onSpliceFlag}\n      onPushFlag = {props.onPushFlag}\n      onSetHour = {props.onSetHour}\n      flags = {props.flags}\n      onChangeRelationship = {props.onChangeRelationship}\n      ></Apartment>\n    )\n  }\n  let FarmSwitch = () => {\n    console.log(\"FARM\")\n    return(\n      <Farm\n      money = {props.money}\n      energy = {props.energy}\n      date = {props.date}\n      onAddMinutes = {props.onAddMinutes}\n      onSpliceFlag = {props.onSpliceFlag}\n      onPushFlag = {props.onPushFlag}\n      onSetHour = {props.onSetHour}\n      flags = {props.flags}\n      onChangeRelationship = {props.onChangeRelationship}\n      ></Farm>\n    )\n  }  \n  \n  return( \n    <Router>\n      <div>\n      <Switch>\n          <Route exact path=\"/Beginning\" component={BeginningSwitch} />\n          <Route exact path=\"/_0_Start\" component={_0_StartSwitch} />\n          <Route exact path=\"/_1_Inspect\" component={_1_InspectSwitch} />\n          <Route exact path=\"/_1_Ignore\" component={_1_IgnoreSwitch} />\n          <Route exact path=\"/Apartment\" component={ApartmentSwitch} />\n          <Route exact path=\"/Farm\" component={FarmSwitch} />\n          <Route exact path=\"/GameMap\" component={GameMapSwitch} />\n              \n          \n          <Redirect to=\"/Beginning\" />\n        </Switch>\n      </div>\n    </Router>\n  );\n\n} //End of App.\n\nconst mapStateToProps = state =>{\n  return{\n    myName: state.name,\n    date: state.date,\n    lust: state.lust,\n    skills: state.skills,\n    physical: state.physical,\n    mind: state.mind,\n    attractiveness: state.attractiveness,\n    pronoun : state.pronoun,\n    energy: state.energy,\n    chest: state.chest,\n    belly: state.belly,\n    height: state.height,\n    status: state.status,\n    environmentStatus: state.environmentStatus,\n    items: state.items,\n    money: state.money,\n    flags: state.flags,\n    relations: state.relations\n  };\n}\n\nconst mapDispatchToProps = dispatch =>{\n  return{\n    onNameChange: (nameChange) => dispatch({type: actionTypes.CHANGE_NAME, newName:nameChange}),\n    onAddMinutes: (minutes) => dispatch({type: actionTypes.ADD_MINUTES, minutesToAdd:minutes}),\n    onAddLust: (lust) => dispatch({type: actionTypes.ADD_LUST, lustToAdd:lust}),\n    onSetLust: () => dispatch({type: actionTypes.SET_LUST}),\n    onAddSkills: (_skillToAdd, _skillAmmountToAdd) => dispatch({type: actionTypes.ADD_SKILLS, skillToAdd: _skillToAdd, skillAmmountToAdd: _skillAmmountToAdd}),\n    onPushFlag: (_flagToPush) => dispatch({type: actionTypes.PUSH_FLAG,flagToAdd: _flagToPush }),\n    onChangeRelationship: (_relationPerson, _relationAmmountToAdd) => dispatch ({type: actionTypes.CHANGE_RELATIONSHIP, relationPerson: _relationPerson, relationAmmountToAdd: _relationAmmountToAdd}),\n    onPushStatus : (_statusToPush) => dispatch({type: actionTypes.PUSH_STATUS, statusToAdd: _statusToPush}),\n    onSpliceStatus : (_statusToSplice) => dispatch({type: actionTypes.SPLICE_STATUS, statusToRemove: _statusToSplice}),\n    onSpliceFlag: (_flagToRemove) => dispatch({type: actionTypes.SPLICE_FLAG, flagToRemove: _flagToRemove}),\n    onAddChest: (_chestToAdd) => dispatch({type: actionTypes.ADD_CHEST,\n    chestToAdd: _chestToAdd}),\n    onAddHeight: (_heightToAdd) => dispatch({type: actionTypes.ADD_HEIGHT, heightToAdd:_heightToAdd}),\n    onAddBelly: (_bellyToAdd) => dispatch({type: actionTypes.ADD_BELLY, bellyToAdd:_bellyToAdd}),\n    onAddItem: (_itemToAdd, _itemAmmountToAdd) => dispatch({type: actionTypes.ADD_ITEMS, itemToAdd: _itemToAdd, itemAmmountToAdd: _itemAmmountToAdd}),\n    onSetHour: (_hourToSet) => dispatch({type:actionTypes.SET_HOUR,hourToSet: _hourToSet})\n\n\n    \n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n\n"]},"metadata":{},"sourceType":"module"}