{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\gvega\\\\Downloads\\\\Opossum\\\\maeville\\\\src\\\\components\\\\SetCol1.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport * as actionTypes from \"../redux/actions\";\nimport { Redirect } from 'react-router';\n\nconst SetCol1 = props => {\n  //Checking energy\n  if (props.energy < 0) {\n    console.log(\"noEnergy\");\n    props.onAddMinutes(480);\n    props.onSetEnergy(100);\n\n    /*#__PURE__*/\n    _jsxDEV(Redirect, {\n      to: \"/SleepAthome\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  } else if (props.energy > 100) {\n    props.onSetEnergy(100);\n  } //Checking lust.\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" Energy: \", props.energy.toFixed(1), \"  \\xA0\\xA0\\xA0\\xA0\\xA0   \", props.date.toString().slice(0, 21), \" \\xA0\\xA0\\xA0\\xA0\\xA0  Cash: $\", props.money]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = SetCol1;\n\nconst mapStateToProps = state => {\n  return {\n    myName: state.name,\n    date: state.date,\n    lust: state.lust,\n    skills: state.skills,\n    physical: state.physical,\n    mind: state.mind,\n    attractiveness: state.attractiveness,\n    pronoun: state.pronoun,\n    energy: state.energy,\n    chest: state.chest,\n    belly: state.belly,\n    height: state.height,\n    status: state.status,\n    environmentStatus: state.environmentStatus,\n    items: state.items,\n    money: state.money,\n    flags: state.flags,\n    relations: state.relations\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onNameChange: nameChange => dispatch({\n      type: actionTypes.CHANGE_NAME,\n      newName: nameChange\n    }),\n    onAddMinutes: minutes => dispatch({\n      type: actionTypes.ADD_MINUTES,\n      minutesToAdd: minutes\n    }),\n    onAddLust: lust => dispatch({\n      type: actionTypes.ADD_LUST,\n      lustToAdd: lust\n    }),\n    onSetLust: () => dispatch({\n      type: actionTypes.SET_LUST\n    }),\n    onAddSkills: (_skillToAdd, _skillAmmountToAdd) => dispatch({\n      type: actionTypes.ADD_SKILLS,\n      skillToAdd: _skillToAdd,\n      skillAmmountToAdd: _skillAmmountToAdd\n    }),\n    onPushFlag: _flagToPush => dispatch({\n      type: actionTypes.PUSH_FLAG,\n      flagToAdd: _flagToPush\n    }),\n    onChangeRelationship: (_relationPerson, _relationAmmountToAdd) => dispatch({\n      type: actionTypes.CHANGE_RELATIONSHIP,\n      relationPerson: _relationPerson,\n      relationAmmountToAdd: _relationAmmountToAdd\n    }),\n    onPushStatus: _statusToPush => dispatch({\n      type: actionTypes.PUSH_STATUS,\n      statusToAdd: _statusToPush\n    }),\n    onSpliceStatus: _statusToSplice => dispatch({\n      type: actionTypes.SPLICE_STATUS,\n      statusToRemove: _statusToSplice\n    }),\n    onSpliceFlag: _flagToRemove => dispatch({\n      type: actionTypes.SPLICE_FLAG,\n      flagToRemove: _flagToRemove\n    }),\n    onAddChest: _chestToAdd => dispatch({\n      type: actionTypes.ADD_CHEST,\n      chestToAdd: _chestToAdd\n    }),\n    onAddHeight: _heightToAdd => dispatch({\n      type: actionTypes.ADD_HEIGHT,\n      heightToAdd: _heightToAdd\n    }),\n    onAddBelly: _bellyToAdd => dispatch({\n      type: actionTypes.ADD_BELLY,\n      bellyToAdd: _bellyToAdd\n    }),\n    onAddItem: (_itemToAdd, _itemAmmountToAdd) => dispatch({\n      type: actionTypes.ADD_ITEMS,\n      itemToAdd: _itemToAdd,\n      itemAmmountToAdd: _itemAmmountToAdd\n    }),\n    onSetHour: _hourToSet => dispatch({\n      type: actionTypes.SET_HOUR,\n      hourToSet: _hourToSet\n    }),\n    onAddEnergy: _EnergyToAdd => dispatch({\n      type: actionTypes.ADD_ENERGY,\n      energyToAdd: _EnergyToAdd\n    }),\n    onSetEnergy: _EnergyToSet => dispatch({\n      type: actionTypes.SET_ENERGY,\n      energyToSet: _EnergyToSet\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetCol1);\n\nvar _c;\n\n$RefreshReg$(_c, \"SetCol1\");","map":{"version":3,"sources":["C:/Users/gvega/Downloads/Opossum/maeville/src/components/SetCol1.js"],"names":["React","connect","actionTypes","Redirect","SetCol1","props","energy","console","log","onAddMinutes","onSetEnergy","toFixed","date","toString","slice","money","mapStateToProps","state","myName","name","lust","skills","physical","mind","attractiveness","pronoun","chest","belly","height","status","environmentStatus","items","flags","relations","mapDispatchToProps","dispatch","onNameChange","nameChange","type","CHANGE_NAME","newName","minutes","ADD_MINUTES","minutesToAdd","onAddLust","ADD_LUST","lustToAdd","onSetLust","SET_LUST","onAddSkills","_skillToAdd","_skillAmmountToAdd","ADD_SKILLS","skillToAdd","skillAmmountToAdd","onPushFlag","_flagToPush","PUSH_FLAG","flagToAdd","onChangeRelationship","_relationPerson","_relationAmmountToAdd","CHANGE_RELATIONSHIP","relationPerson","relationAmmountToAdd","onPushStatus","_statusToPush","PUSH_STATUS","statusToAdd","onSpliceStatus","_statusToSplice","SPLICE_STATUS","statusToRemove","onSpliceFlag","_flagToRemove","SPLICE_FLAG","flagToRemove","onAddChest","_chestToAdd","ADD_CHEST","chestToAdd","onAddHeight","_heightToAdd","ADD_HEIGHT","heightToAdd","onAddBelly","_bellyToAdd","ADD_BELLY","bellyToAdd","onAddItem","_itemToAdd","_itemAmmountToAdd","ADD_ITEMS","itemToAdd","itemAmmountToAdd","onSetHour","_hourToSet","SET_HOUR","hourToSet","onAddEnergy","_EnergyToAdd","ADD_ENERGY","energyToAdd","_EnergyToSet","SET_ENERGY","energyToSet"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport * as actionTypes from \"../redux/actions\";\r\nimport { Redirect } from 'react-router';\r\nconst SetCol1 = (props) => {\r\n    \r\n    //Checking energy\r\n    if(props.energy < 0){\r\n      console.log(\"noEnergy\");\r\n      props.onAddMinutes(480);\r\n      props.onSetEnergy(100);\r\n      <Redirect to=\"/SleepAthome\" />;\r\n\r\n    } else if(props.energy > 100){\r\n      props.onSetEnergy(100);\r\n    }\r\n\r\n    //Checking lust.\r\n\r\n    return(\r\n      <>\r\n      <p> Energy: {props.energy.toFixed(1)}  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   {props.date.toString().slice(0,21)} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Cash: ${props.money}</p>\r\n      </>\r\n    )\r\n  }\r\n\r\nconst mapStateToProps = state =>{\r\n  return{\r\n    myName: state.name,\r\n    date: state.date,\r\n    lust: state.lust,\r\n    skills: state.skills,\r\n    physical: state.physical,\r\n    mind: state.mind,\r\n    attractiveness: state.attractiveness,\r\n    pronoun : state.pronoun,\r\n    energy: state.energy,\r\n    chest: state.chest,\r\n    belly: state.belly,\r\n    height: state.height,\r\n    status: state.status,\r\n    environmentStatus: state.environmentStatus,\r\n    items: state.items,\r\n    money: state.money,\r\n    flags: state.flags,\r\n    relations: state.relations\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n  return{\r\n    onNameChange: (nameChange) => dispatch({type: actionTypes.CHANGE_NAME, newName:nameChange}),\r\n    onAddMinutes: (minutes) => dispatch({type: actionTypes.ADD_MINUTES, minutesToAdd:minutes}),\r\n    onAddLust: (lust) => dispatch({type: actionTypes.ADD_LUST, lustToAdd:lust}),\r\n    onSetLust: () => dispatch({type: actionTypes.SET_LUST}),\r\n    onAddSkills: (_skillToAdd, _skillAmmountToAdd) => dispatch({type: actionTypes.ADD_SKILLS, skillToAdd: _skillToAdd, skillAmmountToAdd: _skillAmmountToAdd}),\r\n    onPushFlag: (_flagToPush) => dispatch({type: actionTypes.PUSH_FLAG,flagToAdd: _flagToPush }),\r\n    onChangeRelationship: (_relationPerson, _relationAmmountToAdd) => dispatch ({type: actionTypes.CHANGE_RELATIONSHIP, relationPerson: _relationPerson, relationAmmountToAdd: _relationAmmountToAdd}),\r\n    onPushStatus : (_statusToPush) => dispatch({type: actionTypes.PUSH_STATUS, statusToAdd: _statusToPush}),\r\n    onSpliceStatus : (_statusToSplice) => dispatch({type: actionTypes.SPLICE_STATUS, statusToRemove: _statusToSplice}),\r\n    onSpliceFlag: (_flagToRemove) => dispatch({type: actionTypes.SPLICE_FLAG, flagToRemove: _flagToRemove}),\r\n    onAddChest: (_chestToAdd) => dispatch({type: actionTypes.ADD_CHEST,\r\n    chestToAdd: _chestToAdd}),\r\n    onAddHeight: (_heightToAdd) => dispatch({type: actionTypes.ADD_HEIGHT, heightToAdd:_heightToAdd}),\r\n    onAddBelly: (_bellyToAdd) => dispatch({type: actionTypes.ADD_BELLY, bellyToAdd:_bellyToAdd}),\r\n    onAddItem: (_itemToAdd, _itemAmmountToAdd) => dispatch({type: actionTypes.ADD_ITEMS, itemToAdd: _itemToAdd, itemAmmountToAdd: _itemAmmountToAdd}),\r\n    onSetHour: (_hourToSet) => dispatch({type:actionTypes.SET_HOUR,hourToSet: _hourToSet}),\r\n    onAddEnergy: (_EnergyToAdd) => dispatch({type:actionTypes.ADD_ENERGY, energyToAdd: _EnergyToAdd}),\r\n    onSetEnergy: (_EnergyToSet) => dispatch({type:actionTypes.SET_ENERGY, energyToSet: _EnergyToSet}),\r\n\r\n\r\n    \r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SetCol1);\r\n\r\n"]},"metadata":{},"sourceType":"module"}