{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\gvega\\\\Downloads\\\\Opossum\\\\maeville\\\\src\\\\components\\\\SetCol1.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst SetCol1 = props => {\n  _s();\n\n  const [open, setOpen] = React.useState(false); //Checking energy\n\n  if (props.energy < 0) {\n    console.log(\"noEnergy\");\n\n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n\n    handleClickOpen();\n\n    const handleClose = () => {\n      setOpen(false);\n    };\n\n    /*#__PURE__*/\n    _jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title\",\n        children: \"Use Google's location service?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"alert-dialog-description\",\n          children: \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Disagree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          autoFocus: true,\n          children: \"Agree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  } else if (props.energy > 100) {\n    console.log(\"Over100Energy\");\n  } //Checking lust.\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" Energy: \", props.energy.toFixed(1), \"  \\xA0\\xA0\\xA0\\xA0\\xA0   \", props.date.toString().slice(0, 21), \" \\xA0\\xA0\\xA0\\xA0\\xA0  Cash: $\", props.money]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(SetCol1, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c = SetCol1;\n\nconst mapStateToProps = state => {\n  return {\n    myName: state.name,\n    date: state.date,\n    lust: state.lust,\n    skills: state.skills,\n    physical: state.physical,\n    mind: state.mind,\n    attractiveness: state.attractiveness,\n    pronoun: state.pronoun,\n    energy: state.energy,\n    chest: state.chest,\n    belly: state.belly,\n    height: state.height,\n    status: state.status,\n    environmentStatus: state.environmentStatus,\n    items: state.items,\n    money: state.money,\n    flags: state.flags,\n    relations: state.relations\n  };\n};\n\nexport default connect(mapStateToProps)(SetCol1);\n\nvar _c;\n\n$RefreshReg$(_c, \"SetCol1\");","map":{"version":3,"sources":["C:/Users/gvega/Downloads/Opossum/maeville/src/components/SetCol1.js"],"names":["React","connect","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","SetCol1","props","open","setOpen","useState","energy","console","log","handleClickOpen","handleClose","toFixed","date","toString","slice","money","mapStateToProps","state","myName","name","lust","skills","physical","mind","attractiveness","pronoun","chest","belly","height","status","environmentStatus","items","flags","relations"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst SetCol1 = (props) => {\r\n\r\n      const [open, setOpen] = React.useState(false);\r\n\r\n      \r\n    \r\n    //Checking energy\r\n    if(props.energy < 0){\r\n      console.log(\"noEnergy\");\r\n      \r\n      const handleClickOpen = () => {\r\n        setOpen(true);\r\n      };\r\n\r\n      handleClickOpen();\r\n\r\n      const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Let Google help apps determine location. This means sending anonymous location data to\r\n            Google, even when no apps are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n\r\n    } else if(props.energy > 100){\r\n      console.log(\"Over100Energy\")\r\n    }\r\n\r\n    //Checking lust.\r\n\r\n    return(\r\n      <>\r\n      <p> Energy: {props.energy.toFixed(1)}  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   {props.date.toString().slice(0,21)} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Cash: ${props.money}</p>\r\n      </>\r\n    )\r\n  }\r\n\r\nconst mapStateToProps = state =>{\r\n  return{\r\n    myName: state.name,\r\n    date: state.date,\r\n    lust: state.lust,\r\n    skills: state.skills,\r\n    physical: state.physical,\r\n    mind: state.mind,\r\n    attractiveness: state.attractiveness,\r\n    pronoun : state.pronoun,\r\n    energy: state.energy,\r\n    chest: state.chest,\r\n    belly: state.belly,\r\n    height: state.height,\r\n    status: state.status,\r\n    environmentStatus: state.environmentStatus,\r\n    items: state.items,\r\n    money: state.money,\r\n    flags: state.flags,\r\n    relations: state.relations\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(SetCol1);\r\n\r\n"]},"metadata":{},"sourceType":"module"}