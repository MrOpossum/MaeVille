{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\gvega\\\\Downloads\\\\Opossum\\\\maeville\\\\src\\\\App.js\";\nimport './App.css';\nimport { connect } from \"react-redux\";\nimport * as actionTypes from \"./redux/actions\";\nimport Apartment from \"./Places/Apartment\";\n\nconst App = props => {\n  //props.onNameChange(\"Paco\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Apartment, {\n      addMinutes: props.onAddMinutes,\n      date: props.date,\n      skills: props.skills,\n      changeName: props.onNameChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }, this);\n}; //End of App.\n\n\n_c = App;\n\nconst mapStateToProps = state => {\n  return {\n    myName: state.name,\n    date: state.date,\n    lust: state.lust,\n    skills: state.skills\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onNameChange: nameChange => dispatch({\n      type: actionTypes.CHANGE_NAME,\n      newName: nameChange\n    }),\n    onAddMinutes: minutes => dispatch({\n      type: actionTypes.ADD_MINUTES,\n      minutesToAdd: minutes\n    }),\n    onAddLust: lust => dispatch({\n      type: actionTypes.ADD_LUST,\n      lustToAdd: lust\n    }),\n    onSetLust: () => dispatch({\n      type: actionTypes.SET_LUST\n    }),\n    onAddSkills: (_skillToAdd, _skillAmmountToAdd) => dispatch({\n      type: actionTypes.ADD_SKILLS,\n      skillToAdd: _skillToAdd,\n      skillAmmountToAdd: _skillAmmountToAdd\n    }),\n    onPushFlag: _flagToPush => dispatch({\n      type: actionTypes.PUSH_FLAG,\n      flagToAdd: _flagToPush\n    }),\n    onChangeRelationship: (_relationPerson, _relationAmmountToAdd) => dispatch({\n      type: actionTypes.CHANGE_RELATIONSHIP,\n      relationPerson: _relationPerson,\n      relationAmmountToAdd: _relationAmmountToAdd\n    }),\n    onPushStatus: _statusToPush => dispatch({\n      type: actionTypes.PUSH_STATUS,\n      statusToAdd: _statusToPush\n    }),\n    onSpliceStatus: _statusToSplice => dispatch({\n      type: actionTypes.SPLICE_STATUS,\n      statusToRemove: _statusToSplice\n    }),\n    onSpliceFlag: _flagToRemove => dispatch({\n      type: actionTypes.SPLICE_FLAG,\n      flagToRemove: _flagToRemove\n    }),\n    onAddChest: _chestToAdd => dispatch({\n      type: actionTypes.ADD_CHEST,\n      chestToAdd: _chestToAdd\n    }),\n    onAddHeight: _heightToAdd => dispatch({\n      type: actionTypes.ADD_HEIGHT,\n      heightToAdd: _heightToAdd\n    }),\n    onAddBelly: _bellyToAdd => dispatch({\n      type: actionTypes.ADD_BELLY,\n      bellyToAdd: _bellyToAdd\n    }),\n    onAddItem: (_itemToAdd, _itemAmmountToAdd) => dispatch({\n      type: actionTypes.ADD_ITEMS,\n      itemToAdd: _itemToAdd,\n      itemAmmountToAdd: _itemAmmountToAdd\n    }),\n    onEnergyAndMinutes: _minutesChanged => dispatch({\n      type: actionTypes.ENERGY_AND_MINUTES,\n      minutesChanged: _minutesChanged\n    }),\n    onSetHour: _hourToSet => dispatch({\n      type: actionTypes.SET_HOUR,\n      hourToSet: _hourToSet\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/gvega/Downloads/Opossum/maeville/src/App.js"],"names":["connect","actionTypes","Apartment","App","props","onAddMinutes","date","skills","onNameChange","mapStateToProps","state","myName","name","lust","mapDispatchToProps","dispatch","nameChange","type","CHANGE_NAME","newName","minutes","ADD_MINUTES","minutesToAdd","onAddLust","ADD_LUST","lustToAdd","onSetLust","SET_LUST","onAddSkills","_skillToAdd","_skillAmmountToAdd","ADD_SKILLS","skillToAdd","skillAmmountToAdd","onPushFlag","_flagToPush","PUSH_FLAG","flagToAdd","onChangeRelationship","_relationPerson","_relationAmmountToAdd","CHANGE_RELATIONSHIP","relationPerson","relationAmmountToAdd","onPushStatus","_statusToPush","PUSH_STATUS","statusToAdd","onSpliceStatus","_statusToSplice","SPLICE_STATUS","statusToRemove","onSpliceFlag","_flagToRemove","SPLICE_FLAG","flagToRemove","onAddChest","_chestToAdd","ADD_CHEST","chestToAdd","onAddHeight","_heightToAdd","ADD_HEIGHT","heightToAdd","onAddBelly","_bellyToAdd","ADD_BELLY","bellyToAdd","onAddItem","_itemToAdd","_itemAmmountToAdd","ADD_ITEMS","itemToAdd","itemAmmountToAdd","onEnergyAndMinutes","_minutesChanged","ENERGY_AND_MINUTES","minutesChanged","onSetHour","_hourToSet","SET_HOUR","hourToSet"],"mappings":"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","sourcesContent":["import './App.css';\nimport {connect} from \"react-redux\";\nimport * as actionTypes from \"./redux/actions\";\nimport Apartment from \"./Places/Apartment\"\n\n\nconst App = ( props ) => {\n\n  \n  \n\n  //props.onNameChange(\"Paco\");\n  \n  return( \n      <div>\n          <Apartment\n          addMinutes = {props.onAddMinutes}\n          date = {props.date}\n          skills = {props.skills}\n          changeName = {props.onNameChange}\n          ></Apartment>\n      </div>\n  );\n\n} //End of App.\n\nconst mapStateToProps = state =>{\n  return{\n    myName: state.name,\n    date: state.date,\n    lust: state.lust,\n    skills: state.skills\n  };\n}\n\nconst mapDispatchToProps = dispatch =>{\n  return{\n    onNameChange: (nameChange) => dispatch({type: actionTypes.CHANGE_NAME, newName:nameChange}),\n    onAddMinutes: (minutes) => dispatch({type: actionTypes.ADD_MINUTES, minutesToAdd:minutes}),\n    onAddLust: (lust) => dispatch({type: actionTypes.ADD_LUST, lustToAdd:lust}),\n    onSetLust: () => dispatch({type: actionTypes.SET_LUST}),\n    onAddSkills: (_skillToAdd, _skillAmmountToAdd) => dispatch({type: actionTypes.ADD_SKILLS, skillToAdd: _skillToAdd, skillAmmountToAdd: _skillAmmountToAdd}),\n    onPushFlag: (_flagToPush) => dispatch({type: actionTypes.PUSH_FLAG,flagToAdd: _flagToPush }),\n    onChangeRelationship: (_relationPerson, _relationAmmountToAdd) => dispatch ({type: actionTypes.CHANGE_RELATIONSHIP, relationPerson: _relationPerson, relationAmmountToAdd: _relationAmmountToAdd}),\n    onPushStatus : (_statusToPush) => dispatch({type: actionTypes.PUSH_STATUS, statusToAdd: _statusToPush}),\n    onSpliceStatus : (_statusToSplice) => dispatch({type: actionTypes.SPLICE_STATUS, statusToRemove: _statusToSplice}),\n    onSpliceFlag: (_flagToRemove) => dispatch({type: actionTypes.SPLICE_FLAG, flagToRemove: _flagToRemove}),\n    onAddChest: (_chestToAdd) => dispatch({type: actionTypes.ADD_CHEST,\n    chestToAdd: _chestToAdd}),\n    onAddHeight: (_heightToAdd) => dispatch({type: actionTypes.ADD_HEIGHT, heightToAdd:_heightToAdd}),\n    onAddBelly: (_bellyToAdd) => dispatch({type: actionTypes.ADD_BELLY, bellyToAdd:_bellyToAdd}),\n    onAddItem: (_itemToAdd, _itemAmmountToAdd) => dispatch({type: actionTypes.ADD_ITEMS, itemToAdd: _itemToAdd, itemAmmountToAdd: _itemAmmountToAdd}),\n    onEnergyAndMinutes: (_minutesChanged) => dispatch({type: actionTypes.ENERGY_AND_MINUTES, minutesChanged: _minutesChanged}),\n    onSetHour: (_hourToSet) => dispatch({type:actionTypes.SET_HOUR,hourToSet: _hourToSet})\n\n\n    \n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}